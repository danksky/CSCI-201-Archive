package dkawalsk_CSCI201L_Assignment2;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.xml.parsers.ParserConfigurationException;

import org.xml.sax.SAXException;

import DOM.*;

/**
 * Servlet implementation class MovieSearchServlet
 */
@WebServlet("/MovieSearch")
public class MovieSearchServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	DOMParser dp;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public MovieSearchServlet() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());

		HttpSession session = request.getSession(true);
		String input = (String) request.getParameter("movieterminput");
		String username = (String) session.getAttribute("username");
		String password = (String) session.getAttribute("password");
		String inputfilename = (String) session.getAttribute("inputfilename");
		int id = (int) session.getAttribute("id");
		dp = (DOMParser) session.getAttribute("dpKey");

		System.out.println(username + " " + password + " " + inputfilename + " id: " + id);
		ArrayList<String> results = new ArrayList<>();
		// ArrayList<String> results = new ArrayList<>();

		switch (id) {
		case 1:
			results = searchByActor(input);
			break;
		case 2:
			results = searchByMovieTitle(input);
			break;
		case 3:
			results = searchByMovieGenre(input);
			break;
		}
		System.out.println("Got here 1");
		session.setAttribute("id", id);
		System.out.println("Got here 2");
		session.setAttribute("results", results);
		System.out.println("Got here 3");
		session.setAttribute("dpKey", dp);
		System.out.println("Got here 4");
		response.sendRedirect("searchMoviesResults.jsp");
		System.out.println("Got here 5");

	}

	private ArrayList<String> searchByMovieGenre(String input) {
		ArrayList<String> foundList = new ArrayList<>();
		for (int i = 0; i < dp.movies.length; i++) {
			if (dp.movies[i].genre.toLowerCase().equals(input.toLowerCase()) && !foundList.contains(dp.movies[i].title))
				foundList.add(dp.movies[i].title);
		}
		return foundList;
	}

	private ArrayList<String> searchByMovieTitle(String input) {
		ArrayList<String> foundList = new ArrayList<>();
		for (int i = 0; i < dp.movies.length; i++) {
			if (dp.movies[i].title.toLowerCase().equals(input.toLowerCase()) && !foundList.contains(dp.movies[i].title))
				foundList.add(dp.movies[i].title);
		}
		return foundList;
	}

	private ArrayList<String> searchByActor(String input) {
		ArrayList<String> foundList = new ArrayList<>();
		for (int i = 0; i < dp.movies.length; i++) {
			for (int j = 0; j < dp.movies[i].actors.length; j++) {
				if (dp.movies[i].actors[j].toLowerCase().equals(input.toLowerCase())
						&& !foundList.contains(dp.movies[j].title))
					foundList.add(dp.movies[j].title);
			}
		}
		if (foundList.size() > 0)
			System.out.println("found a match!");
		else 
			System.out.println("found NO match!");
		return foundList;
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
